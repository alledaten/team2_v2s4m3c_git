<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dev.mvc.review.ReviewDAOInter">

  <!-- review 등록 -->
  <insert id="create" parameterType="ReviewVO">
    INSERT INTO review(review_no, member_no, review_cate_no, review_title, review_content, review_score, review_passwd, review_word, review_date,
                              review_file, review_thumb, review_size)
    VALUES(review_seq.nextval, #{member_no}, #{review_cate_no}, #{review_title}, #{review_content}, #{review_score}, #{review_passwd}, #{review_word}, sysdate,
              #{review_file}, #{review_thumb}, #{review_size})
  </insert> 
  
  <!-- review 전체 목록 -->
  <select id="list_all" resultType="ReviewVO">
    SELECT review_no, member_no, review_cate_no, review_title, review_content, review_score, review_passwd, review_word, review_date, review_file, review_thumb, review_size
    FROM review 
    ORDER BY review_no DESC
  </select> 
  
  <select id="list_by_review_cate_no" resultType="ReviewVO" parameterType="int">
    SELECT review_no, member_no, review_cate_no, review_title, review_content, review_score, review_passwd, review_word, review_date,  review_file, review_thumb, review_size
    FROM review 
    WHERE review_cate_no = #{review_cate_no}
    ORDER BY review_no DESC
  </select> 
  
 
  <!-- 카테고리별 검색 목록 + 페이징 + 메인 이미지 -->
  <select id="list_by_review_cate_no_search_paging" 
              resultType="Review_MemberVO" parameterType="HashMap">
     SELECT review_no, member_no, member_nickname, review_cate_no, review_title, review_content, review_score, review_good, review_view, review_reply_cnt, review_word, review_date, review_file, 
               review_thumb, review_size, r
     FROM (
            SELECT review_no, member_no, member_nickname, review_cate_no, review_title, review_content, review_score, review_good, review_view, review_reply_cnt, review_word, review_date, review_file, 
                      review_thumb, review_size, rownum as r
            FROM (
                     SELECT  r.review_no, r.member_no, m.member_nickname, r.review_cate_no, r.review_title, r.review_content, r.review_score, r.review_good, r.review_view, r.review_reply_cnt, 
                                r.review_word, r.review_date, r.review_file, r.review_thumb, r.review_size
                     FROM review r, member m
                     <choose>
                        <when test="review_word == null or review_word == ''">
                           WHERE review_cate_no = #{review_cate_no} AND r.member_no = m.member_no
                        </when>
                        <otherwise>
                           WHERE review_cate_no = #{review_cate_no}
                                    AND r.member_no = m.member_no
                                     AND (review_title LIKE '%' || #{review_word} || '%'
                                            OR review_content LIKE '%' || #{review_word} || '%' 
                                            OR review_word LIKE '%' || #{review_word} || '%')                           
                        </otherwise>
                     </choose>
                     ORDER BY review_no DESC
           )      
)         

    WHERE <![CDATA[ r >= #{startNum} AND r <= #{endNum} ]]>
    
    
  <!-- 1 page: WHERE r >= 1 AND r <= 10; 
        2 page: WHERE r >= 11 AND r <= 20;
        3 page: WHERE r >= 21 AND r <= 30; -->
     
  </select>
   
   <!-- 카테고리별 검색 레코드 갯수 -->
   <select id="search_count" resultType="int" parameterType="HashMap">
     SELECT COUNT(*) as cnt
     FROM review
     <choose>
       <when test="review_word == null or review_word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
         WHERE review_cate_no = #{review_cate_no}
       </when>
       <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
         WHERE review_cate_no = #{review_cate_no} AND (review_title LIKE '%' || #{review_word} || '%' 
                                                                  OR review_content LIKE '%' || #{review_word} || '%' 
                                                                  OR review_word LIKE '%' || #{review_word} || '%')
       </otherwise>
     </choose>
   </select>    
   
  <!-- 1건 조회 -->
  <select id="read" resultType="ReviewVO" parameterType="int">
    SELECT review_no, member_no, review_cate_no, review_title, review_content, review_score, review_passwd, review_word, review_date,  review_file, review_thumb, review_size
    FROM review
    WHERE review_no = #{review_no}
  </select>
  
  <!-- 수정 -->
  <update id="update" parameterType="ReviewVO">
    UPDATE review 
    SET review_title =#{review_title}, review_content = #{review_content}, review_score = #{review_score}, review_word= #{review_word}
    WHERE review_no = #{review_no}
  </update>
  
  <!-- 삭제 -->
  <delete id="delete" parameterType="int">
    DELETE FROM review
    WHERE review_no= #{review_no}
  </delete>
  
  <!-- 패스워드 검사 -->
  <select id="passwd_check" parameterType="HashMap" resultType="int">
    SELECT COUNT(*) as passwd_cnt
    FROM review
    WHERE review_no=#{review_no} AND review_passwd=#{review_passwd}
  </select>
  
  <!-- 첨부 파일 메인 이미지 변경 -->
  <update id="img_update" parameterType="ReviewVO">
    UPDATE review
    SET review_file = #{review_file}, review_thumb= #{review_thumb}, review_size=#{review_size}
    WHERE review_no=#{review_no} 
  </update>
  



</mapper>